diff -r 7fb3aa46a2db+ -r 7fb3aa46a2db app/controllers/Application.scala
--- a/app/controllers/Application.scala	Fri Jun 07 17:17:27 2013 -0700
+++ b/app/controllers/Application.scala	Thu Jun 20 13:11:35 2013 -0700
@@ -5,5 +5,11 @@
 import anorm._
 import anorm.SqlParser._
 import play.api.db.DB
+import play.api.libs.json.Format
+import play.api.libs.json.JsValue
+import play.api.libs.json.JsObject
+import play.api.libs.json.JsString
+import play.api.libs.json.JsNumber
+import play.api.libs.json.JsBoolean
 
 import play.api.Play.current
@@ -8,4 +14,5 @@
 
 import play.api.Play.current
+import java.io.Reader
 
 object Application extends Controller {
@@ -10,6 +17,6 @@
 
 object Application extends Controller {
-
+  /*
   def index = Action {
     var clearinghouseCount = 0
 
@@ -13,8 +20,47 @@
   def index = Action {
     var clearinghouseCount = 0
 
-    DB.withConnection { implicit c =>
-      //clearinghouseCount = SQL("SELECT COUNT(*) FROM Clearinghouse").single(scalar.Int)
-       clearinghouseCount = SQL("SELECT COUNT(*) FROM Clearinghouse").as(scalar[Int].single)
+    // DB.withConnection { implicit c =>
+    //  clearinghouseCount = SQL("SELECT COUNT(*) FROM Clearinghouse").as(scalar[Int].single)
+    // }
+
+    // Ok(views.html.index("Your new application is ready. There are " + clearinghouseCount + " clearinghouses"))
+    OK(views.html.index("Your new application is ready.")
+  }
+  */
+
+  def index = Action { implicit request =>
+    Ok(views.html.index())
+  }
+
+  // Makes some routes available via javascript
+  def javascriptRoutes = Action { implicit request =>
+    Ok(
+      Routes.javascriptRouter("jsRoutes")(
+        routes.javascript.Application.tasks
+      )
+    ).as("text/javascript")
+  }
+
+  //Model for the Json response, this should be in database and more elaborated in a real app
+  case class Task(id: Int, text: String, done: Boolean = false)
+
+  // to facilitate conversion from class to Json we create this implicit
+  /*
+  object Task {
+    implicit object dumpToJson extends Format[Task] {
+      def writes(o: Task): JsValue = JsObject(
+        List(
+          "id" -> JsNumber(o.id),
+          "text" -> JsString(o.text),
+          "done" -> JsBoolean(o.done)
+        )
+      )
+
+      def reads(json: JsValue): Task = Task(
+        id = (json \ "id").as[Int],
+        text = (json \ "text").as[String],
+        done = (json \ "done").as[Boolean]
+      )
     }
 
@@ -19,6 +65,12 @@
     }
 
-    Ok(views.html.index("Your new application is ready. There are " + clearinghouseCount + " clearinghouses"))
+  }
+  */
+  //returns a list of tasks as json
+  def tasks = Action { implicit request =>
+    // val values = List(Task(1, "learn angular", true), Task(2, "build an Angular app"))
+    // Ok(Json.toJson(values).toString()).as("application/json")
+
   }
 
 }
\ No newline at end of file
diff --git a/.iml b/.iml
new file mode 100644
--- /dev/null
+++ b/.iml
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module relativePaths="true" type="JAVA_MODULE" version="4">
+    <component name="NewModuleRootManager" inherit-compiler-output="true">
+        <orderEntry type="jdk" jdkName="1.6" jdkType="JavaSDK" />
+        <orderEntry type="sourceFolder" forTests="false" />
+        <exclude-output />
+        <content url="file://$MODULE_DIR$">
+            <sourceFolder url="file://$MODULE_DIR$/app" isTestSource="false" />
+            <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
+        </content>
+        
+        <orderEntry type="inheritedJdk" />
+        <orderEntry type="module-library">
+            <library name="Project Libraries">
+                <CLASSES>
+                                      <root url="file://$MODULE_DIR$/lib" />
+                    
+                </CLASSES>
+                <JAVADOC />
+                <SOURCES />
+                <jarDirectory url="file://$MODULE_DIR$/lib" recursive="false" />
+                
+            </library>
+        </orderEntry>
+        <orderEntry type="module-library">
+            <library name="PlayFramework Dependencies">
+                <CLASSES>
+                    <root url="file:///home/jcheng/Documents/play/framework/lib" />
+                </CLASSES>
+                <JAVADOC />
+                <SOURCES />
+                <jarDirectory url="file:///home/jcheng/Documents/play/framework/lib" recursive="false" />
+            </library>
+        </orderEntry>
+        <orderEntry type="module-library">
+            <library>
+                <CLASSES>
+                    <root url="jar:///home/jcheng/Documents/play/framework/play-master-7c6e3bc.jar!/" />
+                </CLASSES>
+                <JAVADOC />
+                <SOURCES>
+                    <root url="file:///home/jcheng/Documents/play/framework/src" />
+                </SOURCES>
+            </library>
+        </orderEntry>
+    </component>
+</module>
diff --git a/.ipr b/.ipr
new file mode 100644
--- /dev/null
+++ b/.ipr
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.iml" filepath="$PROJECT_DIR$/.iml" />
+    </modules>
+  </component>
+  <component name="ProjectRootManager" languageLevel="JDK_1_6" assert-keyword="true" jdk-15="true" project-jdk-name="1.6" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/tmp/classes" />
+  </component>
+</project>
